# 5.3.1 Check that aircraft is incoming

# Incoming vertically:
[?flight2, :aircraftIncomingVerticallyFromAbove, ?sector] :-
    [?flight, :withinSectorHorizontally, ?sector],
    NOT [?flight, :withinSectorVertically, ?sector],
    # Identify consecutive timestamps
    [?prevT, :next, ?currT],  
    # Bind flights at each timestamp
    [?prevT, :flight, ?flight1],
    [?currT, :flight, ?flight2],
    # Extract the same flights only
    [?flight1, :aircraftIdentification, ?flightID],
    [?flight2, :aircraftIdentification, ?flightID],

    # Extract previous and current elements for the flight at each timestamp
    [?flight1, :currentElement, ?prevElement],
    [?flight2, :currentElement, ?currElement],

    [?currElement, fx:point4D, ?currPoint4D],
    [?currPoint4D, fx:position, ?currPosition],
    [?currPosition, fx:pos, ?currLatLon],
    [?currLatLon, fx:lat, ?currLat],
    [?currLatLon, fx:lon, ?currLon],
    [?currPoint4D, fx:level, ?currLevel],
    [?currPoint4D, fx:predictedAirspeed, ?currSpeed],
    [?currElement, fx:extension, ?currVRate],

    [?prevElement, fx:point4D, ?prevPoint4D],
    [?prevPoint4D, fx:position, ?prevPosition],
    [?prevPosition, fx:pos, ?prevLatLon],
    [?prevLatLon, fx:lat, ?prevLat],
    [?prevLatLon, fx:lon, ?prevLon],

    [?aixmFeatures, :contains, ?airspace],
    [?airspace, ax:geometryComponent, ?sector],
    [?sector, ax:upperLimit, ?upperLimit],

    [?flight2, :distanceToClosestHorizontalBoundary, ?currMinDist], # Horizontal distance to sector
    [?flight1, :distanceToClosestHorizontalBoundary, ?prevMinDist],

    BIND(
        ?currMinDist/(?currSpeed*0.514444444)
        AS ?timeToReachSector
    ),
    BIND(
        ABS(((?currLevel - (?upperLimit*100)))/?timeToReachSector)*60 # ft/min
        AS ?v   # TODO: provjeriti je li u javi ovo dobro!
    ),
    FILTER(
        ?currLevel > ?upperLimit*100,
        ?currVRate < 0,
        ABS(?currVRate) >= ABS(?v) # TODO: provjeriti je li u javi ovo dobro!
    ).

[?flight2, :aircraftIncomingVerticallyFromBelow, ?sector] :-
    [?flight, :withinSectorHorizontally, ?sector],
    NOT [?flight, :withinSectorVertically, ?sector],
    # Identify consecutive timestamps
    [?prevT, :next, ?currT],  
    # Bind flights at each timestamp
    [?prevT, :flight, ?flight1],
    [?currT, :flight, ?flight2],
    # Extract the same flights only
    [?flight1, :aircraftIdentification, ?flightID],
    [?flight2, :aircraftIdentification, ?flightID],

    # Extract previous and current elements for the flight at each timestamp
    [?flight1, :currentElement, ?prevElement],
    [?flight2, :currentElement, ?currElement],

    [?currElement, fx:point4D, ?currPoint4D],
    [?currPoint4D, fx:position, ?currPosition],
    [?currPosition, fx:pos, ?currLatLon],
    [?currLatLon, fx:lat, ?currLat],
    [?currLatLon, fx:lon, ?currLon],
    [?currPoint4D, fx:level, ?currLevel],
    [?currPoint4D, fx:predictedAirspeed, ?currSpeed],
    [?currElement, fx:extension, ?currVRate],

    [?prevElement, fx:point4D, ?prevPoint4D],
    [?prevPoint4D, fx:position, ?prevPosition],
    [?prevPosition, fx:pos, ?prevLatLon],
    [?prevLatLon, fx:lat, ?prevLat],
    [?prevLatLon, fx:lon, ?prevLon],

    [?aixmFeatures, :contains, ?airspace],
    [?airspace, ax:geometryComponent, ?sector],
    [?sector, ax:lowerLimit, ?lowerLimit],

    [?flight2, :distanceToClosestHorizontalBoundary, ?currMinDist], # Horizontal distance to sector
    [?flight1, :distanceToClosestHorizontalBoundary, ?prevMinDist],

    BIND(
        ?currMinDist/(?currSpeed*0.514444444)
        AS ?timeToReachSector
    ),
    BIND(
        ABS(((?currLevel - (?lowerLimit*100)))/?timeToReachSector)*60 # ft/min
        AS ?v   # TODO: provjeriti je li u javi ovo dobro!
    ),
    FILTER(
        ?currLevel < ?lowerLimit*100,
        ?currVRate > 0,
        ABS(?currVRate) >= ABS(?v) # TODO: provjeriti je li u javi ovo dobro!
    ).

# DeMorgan
[?flight, :aircraftIncomingVertically, ?sector] :-
    NOT(
        NOT [?flight, :aircraftIncomingVerticallyFromAbove, ?sector],
        NOT [?flight, :aircraftIncomingVerticallyFromBelow, ?sector]
    ).
    

# Incoming horizontally:
[?flight, :aircraftIncomingHorizontallyWhenInSectorVertically, ?sector] :-
    NOT [?flight, :withinSectorHorizontally, ?sector],
    [?flight, :withinSectorVertically, ?sector],
    # Identify consecutive timestamps
    [?prevT, :next, ?currT],  
    # Bind flights at each timestamp
    [?prevT, :flight, ?flight1],
    [?currT, :flight, ?flight2],
    # Extract the same flights only
    [?flight1, :aircraftIdentification, ?flightID],
    [?flight2, :aircraftIdentification, ?flightID],

    # Extract previous and current elements for the flight at each timestamp
    [?flight1, :currentElement, ?prevElement],
    [?flight2, :currentElement, ?currElement],

    [?currElement, fx:point4D, ?currPoint4D],
    [?currPoint4D, fx:position, ?currPosition],
    [?currPosition, fx:pos, ?currLatLon],
    [?currLatLon, fx:lat, ?currLat],
    [?currLatLon, fx:lon, ?currLon],
    [?currPoint4D, fx:level, ?currLevel],
    [?currPoint4D, fx:predictedAirspeed, ?currSpeed],
    [?currElement, fx:extension, ?currVRate],

    [?prevElement, fx:point4D, ?prevPoint4D],
    [?prevPoint4D, fx:position, ?prevPosition],
    [?prevPosition, fx:pos, ?prevLatLon],
    [?prevLatLon, fx:lat, ?prevLat],
    [?prevLatLon, fx:lon, ?prevLon],

    [?aixmFeatures, :contains, ?airspace],
    [?airspace, ax:geometryComponent, ?sector],
    [?sector, ax:lowerLimit, ?lowerLimit],

    [?flight2, :distanceToClosestHorizontalBoundary, ?currMinDist], # Horizontal distance to sector
    [?flight1, :distanceToClosestHorizontalBoundary, ?prevMinDist],

    BIND(
        ?currMinDist/(?currSpeed*0.514444444)
        AS ?timeToReachSector
    ),
    BIND(
        ABS(((?currLevel - (?lowerLimit*100)))/?timeToReachSector)*60 # ft/min
        AS ?v   # TODO: provjeriti je li u javi ovo dobro!
    ),

    FILTER(
        ?currMinDist < ?prevMinDist
    ),
    ...


[?flight, :aircraftIncomingHorizontallyWhenNotInSectorVertically, ?sector] :-
    NOT [?flight, :withinSectorHorizontally, ?sector],
    NOT [?flight, :withinSectorVertically, ?sector],
    # Identify consecutive timestamps
    [?prevT, :next, ?currT],  
    # Bind flights at each timestamp
    [?prevT, :flight, ?flight1],
    [?currT, :flight, ?flight2],
    # Extract the same flights only
    [?flight1, :aircraftIdentification, ?flightID],
    [?flight2, :aircraftIdentification, ?flightID],

    # Extract previous and current elements for the flight at each timestamp
    [?flight1, :currentElement, ?prevElement],
    [?flight2, :currentElement, ?currElement],

    [?currElement, fx:point4D, ?currPoint4D],
    [?currPoint4D, fx:position, ?currPosition],
    [?currPosition, fx:pos, ?currLatLon],
    [?currLatLon, fx:lat, ?currLat],
    [?currLatLon, fx:lon, ?currLon],
    [?currPoint4D, fx:level, ?currLevel],
    [?currPoint4D, fx:predictedAirspeed, ?currSpeed],
    [?currElement, fx:extension, ?currVRate],

    [?prevElement, fx:point4D, ?prevPoint4D],
    [?prevPoint4D, fx:position, ?prevPosition],
    [?prevPosition, fx:pos, ?prevLatLon],
    [?prevLatLon, fx:lat, ?prevLat],
    [?prevLatLon, fx:lon, ?prevLon],

    [?aixmFeatures, :contains, ?airspace],
    [?airspace, ax:geometryComponent, ?sector],
    [?sector, ax:lowerLimit, ?lowerLimit],

    [?flight2, :distanceToClosestHorizontalBoundary, ?currMinDist], # Horizontal distance to sector
    [?flight1, :distanceToClosestHorizontalBoundary, ?prevMinDist],

    BIND(
        ?currMinDist/(?currSpeed*0.514444444)
        AS ?timeToReachSector
    ),
    BIND(
        ABS(((?currLevel - (?lowerLimit*100)))/?timeToReachSector)*60 # ft/min
        AS ?v   # TODO: provjeriti je li u javi ovo dobro!
    ),

    FILTER(
        ?currMinDist < ?prevMinDist
    ),
    ...
