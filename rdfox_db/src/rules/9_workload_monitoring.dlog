@prefix fx: <http://www.fixm.aero/flight/4.3/>.
@prefix fb: <http://www.fixm.aero/base/4.3/>.
@prefix ax: <https://aware-sesar.eu/aixm/5.1.1/>.
@prefix : <https://aware-sesar.eu/>.
@prefix math: <http://www.w3.org/2005/xpath-functions/math#>.

# 5.9 Workload Monitoring 

# 5.9.1 Track current number of assumed aircraft 
# svaki timestamp nam mora imati objekt/atribut koji govori koliko je trenutno assumed aircrafta
[?timestamp, :assumedAircraftCount, ?numOfAssumedAircraft] :-
    AGGREGATE(
        [?timestamp, fx:flight, ?flight],
        [?flight, :isAircraftAlreadyAssumed, 1]
        ON ?timestamp
        BIND COUNT(?flight) AS ?numOfAssumedAircraft
    ).

# 5.9.2 Track number of conflicts and potential conflicts
[?timestamp, :conflictsCount, ?count]:-
    AGGREGATE(
        [?timestamp, fx:flight, ?flight1],
        [?timestamp, fx:flight, ?flight2],
        [?flight1, fx:aircraftIdentification, ?flightID1],
        [?flight1, :currentElement, ?currElement1],
        [?currElement1,fx:point4D, ?currPoint4D1],    
        [?currPoint4D1, fx:position, ?currPosition1],
        [?currPosition1, fb:pos, ?currPoint1],
        [?currPoint1, fb:lat, ?currLat1],
        [?currPoint1, fb:lon, ?currLon1],    
        [?currPoint4D1, fx:level, ?currLevel1],
        [?currLevel1, fb:flightLevel, ?currFL1],
        [?flight2, fx:aircraftIdentification, ?flightID2],
        [?flight2, :currentElement, ?currElement2],
        [?currElement2, fx:point4D, ?currPoint4D2],    
        [?currPoint4D2, fx:position, ?currPosition2],
        [?currPosition2, fb:pos, ?currPoint2],
        [?currPoint2, fb:lat, ?currLat2],
        [?currPoint2, fb:lon, ?currLon2],
        [?currPoint4D2, fx:level, ?currLevel2],
        [?currLevel2, fb:flightLevel, ?currFL2],
        BIND(
            ABS(?currFL1 - ?currFL2) AS ?verticalDistance
        ), 
        BIND(6371 as ?R),		# Radius of the earth in km
        BIND(
            (?currLat2 - ?currLat1) * (math:pi/180) AS ?diffLatInRad
        ), 	# deg2rad
        BIND(
            (?currLon2 - ?currLon1) * (math:pi/180) AS ?diffLonInRad
        ), 
        BIND(
            ?currLat1 * (math:pi/180) AS ?currLatInRad1
        ),
        BIND(
            ?currLat2 * (math:pi/180) AS ?currLatInRad2
        ),
        BIND(
            POW(SIN(?diffLatInRad/2), 2) + COS(?currLatInRad1) * COS(?currLatInRad2) * POW(SIN(?diffLonInRad/2), 2)
            AS ?aCurr
        ),
        BIND(
            2 * ATAN2(SQRT(?aCurr), SQRT(1-?aCurr)) AS ?cCurr
        ),
        BIND(
            ?R * ?cCurr * 1000 AS ?horizontalDistance
        ),
        FILTER(
            ?flightID1 != ?flightID2 && 
            ?horizontalDistance <= 18520 && 
            ?verticalDistance <= 1000
        )
        ON ?timestamp
        BIND COUNT(?flight1) AS ?numOfConflicts
    ),
    BIND(?numOfConflicts/2 AS ?count).

# TODO- za potetntial conflicts treba u pipelineu implementirati skriptu jer je potrebno usporediti svaki par točaka

# 5.9.3 Determine future number of sector entries 
# todo - prekomplicirano za datalog

# 5.9.4 Determine sector air traffic complexity (ML module) 
# trebamo li opce pravilo za ovo?

# 5.9.5 Determine plausibility of traffic complexity assessment 

[?timestamp2, :hasHighPlausibilty, ?highPlausibilityIndicator] :-
    [?timestamp1, :next, ?timestamp2],
    [?timestamp1, :assumedAircraft, ?prevNumOfAssumedAircraft], # prev
    [?timestamp2, :assumedAircraft, ?currNumOfAssumedAircraft], # curr
    [?timestamp1, :conflictModule, ?prevConflictModule],
    [?timestamp2, :conflictModule, ?currConflictModule],
    [?prevConflictModule, :conflicts, ?prevNumOfConflicts],
    [?currConflictModule, :conflicts, ?currNumOfConflicts],
    [?timestamp1, :complexityModule, ?prevComplexityModule],
    [?timestamp2, :complexityModule, ?currComplexityModule],
    [?prevComplexityModule, :complexity, ?prevComplexity], # TODO: dodati u graf module
    [?currComplexityModule, :complexity, ?currComplexity],
    BIND(?prevNumOfConflicts + ?prevNumOfAssumedAircraft AS ?prevN),
    BIND(?currNumOfConflicts + ?currNumOfAssumedAircraft AS ?currN),
    
    BIND(
        IF(
            (?currComplexity > ?prevComplexity) && (?currN > ?prevN) ||
            (?currComplexity < ?prevComplexity) && (?currN < ?prevN) ||
            (?currN = ?prevN) && ABS(?currComplexity - ?prevComplexity) <= 0.5,
            1,
            0
        )
        AS ?highPlausibilityIndicator
    ).

[?timestamp2, :hasMediumPlausibilty, ?mediumPlausabilityIndicator] :-
    [?timestamp2, :hasHighPlausibilty, 0],
    [?timestamp1, :next, ?timestamp2],
    [?timestamp1, :assumedAircraft, ?prevNumOfAssumedAircraft], # prev
    [?timestamp2, :assumedAircraft, ?currNumOfAssumedAircraft], # curr
    [?timestamp1, :conflictModule, ?prevConflictModule],
    [?timestamp2, :conflictModule, ?currConflictModule],
    [?prevConflictModule, :conflicts, ?prevNumOfConflicts],
    [?currConflictModule, :conflicts, ?currNumOfConflicts],
    [?timestamp1, :complexityModule, ?prevComplexityModule],
    [?timestamp2, :complexityModule, ?currComplexityModule],
    [?prevComplexityModule, :complexity, ?prevComplexity], # TODO: dodati u graf module
    [?currComplexityModule, :complexity, ?currComplexity],
    BIND(?prevNumOfConflicts + ?prevNumOfAssumedAircraft AS ?prevN),
    BIND(?currNumOfConflicts + ?currNumOfAssumedAircraft AS ?currN),
    
    BIND(
        IF(
            (?currComplexity > ?prevComplexity) && (?currN = ?prevN) ||      
            (?currComplexity < ?prevComplexity) && (?currN = ?prevN) ||
            ABS(?currComplexity - ?prevComplexity) <= 0.5 && (?currN > ?prevN) ||
            ABS(?currComplexity - ?prevComplexity) <= 0.5 && (?currN < ?prevN),
            1,
            0
        )
        AS ?mediumPlausabilityIndicator
    ).

[?timestamp2, :hasLowPlausibilty, ?lowPlausabilityIndicator] :-
    [?timestamp2, :hasMediumPlausibilty, 0],
    [?timestamp1, :next, ?timestamp2],
    [?timestamp1, :assumedAircraft, ?prevNumOfAssumedAircraft], # prev
    [?timestamp2, :assumedAircraft, ?currNumOfAssumedAircraft], # curr
    [?timestamp1, :conflictModule, ?prevConflictModule],
    [?timestamp2, :conflictModule, ?currConflictModule],
    [?prevConflictModule, :conflicts, ?prevNumOfConflicts],
    [?currConflictModule, :conflicts, ?currNumOfConflicts],
    [?timestamp1, :complexityModule, ?prevComplexityModule],
    [?timestamp2, :complexityModule, ?currComplexityModule],
    [?prevComplexityModule, :complexity, ?prevComplexity], # TODO: dodati u graf module
    [?currComplexityModule, :complexity, ?currComplexity],
    BIND(?prevNumOfConflicts + ?prevNumOfAssumedAircraft AS ?prevN),
    BIND(?currNumOfConflicts + ?currNumOfAssumedAircraft AS ?currN),
    BIND(
        IF(
            (?currComplexity > ?prevComplexity) && (?currN < ?prevN) || 
            (?currComplexity < ?prevComplexity) && (?currN > ?prevN),
            1,
            0
        )
        AS ?lowPlausabilityIndicator
    ).