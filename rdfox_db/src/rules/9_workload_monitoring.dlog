#5.9 Workload Monitoring 

#5.9.1 Track current number of assumed aircraft 
"""svaki timestamp nam mora imati objekt/atribut koji govori koliko je trenutno assumed aircrafta"""
[?timestamp, :assumedAircraft, ?numOfAssumedAircraft] :-
    AGGREGATE(
        [?timestamp, fx:flight, ?flight],
        [?flight, :aircraftIdentification, ?flightID],
        [?flight, :isAircraftAlreadyAssumed, 1],
        ON ?timestamp
        BIND(COUNT(?flight) AS ?numOfAssumedAircraft)
    ).#valjda tak?

#5.9.2 Track number of conflicts and potential conflicts  
[?timestamp, :conflicts, ?numOfConflicts]:-
    [?timestamp, fx:flight, ?flight1],
    [?timestamp, fx:flight, ?flight2],
    [?flight1, :aircraftIdentification, ?flightID1],
    [?flight1, :currentElement, ?currElement1],
    [?currElement1,fx:point4D, ?currPoint4D1],    
    [?currPoint4D1, fx:position, ?currPosition1],
    [?currPosition1, fx:pos, ?currLatLon1],
    [?currLatLon1, fx:lat, ?currLat1],
    [?currPoint4D, fx:level, ?currLevel1],
    [?currLatLon1, fx:lon, ?currLon1],    
    [?flight2, :aircraftIdentification, ?flightID2],
    [?flight2, :currentElement, ?currElement2],
    [?currElement2, fx:point4D, ?currPoint4D2],    
    [?currPoint4D2, fx:position, ?currPosition2],
    [?currPosition2, fx:pos, ?currLatLon2],
    [?currLatLon2, fx:lat, ?currLat2],
    [?currLatLon2, fx:lon, ?currLon2],
    [?currPoint4D2, fx:level, ?currLevel2],
    BIND(ABS(?currLevel1-?currLevel2) as ?verticalDistance),
    BIND(6371 as ?R),		# Radius of the earth in km
    BIND((?currLat2 - ?currLat1) * (math:pi/180) AS ?diffLatInRad),	# deg2rad
    BIND((?currLon2 - ?currLon1) * (math:pi/180) AS ?diffLonInRad),
    BIND(?currLat1 * (math:pi/180) AS ?currLatInRad1),
    BIND(?currLat2 * (math:pi/180) AS ?currLatInRad2),
    BIND(
        math:pow(math:sin(?diffLatInRad/2), 2) + 
        math:cos(?currLatInRad1) * math:cos(?currLatInRad2) *
        math:pow(math:sin(?diffLonInRad/2), 2)
        AS ?aCurr
    ),
    BIND(2 * math:atan2(math:sqrt(?aCurr), math:sqrt(1-?aCurr)) AS ?cCurr),
    BIND(?R * ?cCurr * 1000 AS ?horizontalDistance),
    FILTER(?horizontalDistance <= 18520 && ?verticalDistance <= 1000),
    AGGREGATE(COUNT(DISTINCT ?flight1, ?flight2) AS ?numOfConflicts).

#TODO- za potetntial conflicts treba u pipelineu implementirati skriptu jer je potrebno usporediti svaki par točaka

#5.9.3 Determine future number of sector entries 
#todo - prekomplicirano za datalog

#5.9.4 Determine sector air traffic complexity (ML module) 
"""trebamo li opce pravilo za ovo?"""

#5.9.5 Determine plausibility of traffic complexity assessment 

[?timestamp2, :hasHighPlausibilty, ?highPlausibilityIndicator] :-
    [?timestamp1, :next, ?timestamp2],
    [?timestamp1, :assumedAircraft, ?prevNumOfAssumedAircraft],#prev
    [?timestamp2, :assumedAircraft, ?currNumOfAssumedAircraft],#curr
    [?timestamp1, :conflictModule, ?prevConflictModule],
    [?timestamp2, :conflictModule, ?currConflictModule],
    [?prevConflictModule, :conflicts, ?prevNumOfConflicts],
    [?currConflictModule, :conflicts, ?currNumOfConflicts],
    [?timestamp1, :complexityModule, ?prevComplexityModule],
    [?timestamp2, :complexityModule, ?currComplexityModule],
    [?prevComplexityModule, :complexity, ?prevComplexity],#TODO: dodati u graf module
    [?currComplexityModule, :complexity, ?currComplexity],
    BIND(?prevNumOfConflicts + ?prevNumOfAssumedAircraft AS ?prevN),
    BIND(?currNumOfConflicts + ?currNumOfAssumedAircraft AS ?currN),
    
    BIND(
        IF(
            (?currComplexity > ?prevComplexity) && (?currN > ?prevN) ||
            (?currComplexity < ?prevComplexity) && (?currN < ?prevN) ||
            (?currN = ?prevN) && ABS(?currComplexity - ?prevComplexity) <= 0.5,
            1,
            0
        )
        AS ?plausibilityIndicator
    ).
    """
    FILTER(
        (?currComplexity > ?prevComplexity) && (?currN > ?prevN) ||
        (?currComplexity < ?prevComplexity) && (?currN < ?prevN) ||
        (?currN = ?prevN) && ABS(?currComplexity - ?prevComplexity) <= 0.5 #ovo provjeriti, u AISAi ima complexity tolerance +- 0.5
    ).

    referenca je 5.4.2 za ovaj nacin pisanja filtera
    FILTER(

        !(
            !(
                (?currComplexity > ?prevComplexity),
                (?currN > ?prevN),
            )&&
            !(
                (?currComplexity < ?prevComplexity),
                (?currN < ?prevN),
            )&&
            !(
                ABS(?currComplexity - ?prevComplexity) <= 0.5,#ovo provjeriti, u AISAi ima complexity tolerance +- 0.5
                (?currN = ?prevN),
            )

        )
    ).
    """

[?timestamp2, :hasMediumPlausibilty, ?mediumPlausabilityIndicator] :-
    [?timestamp2, :hasHighPlausibilty, 0],
    [?timestamp1, :next, ?timestamp2],
    [?timestamp1, :assumedAircraft, ?prevNumOfAssumedAircraft],#prev
    [?timestamp2, :assumedAircraft, ?currNumOfAssumedAircraft],#curr
    [?timestamp1, :conflictModule, ?prevConflictModule],
    [?timestamp2, :conflictModule, ?currConflictModule],
    [?prevConflictModule, :conflicts, ?prevNumOfConflicts],
    [?currConflictModule, :conflicts, ?currNumOfConflicts],
    [?timestamp1, :complexityModule, ?prevComplexityModule],
    [?timestamp2, :complexityModule, ?currComplexityModule],
    [?prevComplexityModule, :complexity, ?prevComplexity],#TODO: dodati u graf module
    [?currComplexityModule, :complexity, ?currComplexity],
    BIND(?prevNumOfConflicts + ?prevNumOfAssumedAircraft AS ?prevN),
    BIND(?currNumOfConflicts + ?currNumOfAssumedAircraft AS ?currN),
    
    BIND(
        IF(
            (?currComplexity > ?prevComplexity) && (?currN = ?prevN) ||      
            (?currComplexity < ?prevComplexity) && (?currN = ?prevN) ||
            ABS(?currComplexity - ?prevComplexity) <= 0.5 && (?currN > ?prevN) ||
            ABS(?currComplexity - ?prevComplexity) <= 0.5 && (?currN < ?prevN),
            1,
            0
        )
        AS ?mediumPlausabilityIndicator
    ).
    """    deMorgan
    FILTER(

        !(
            !(
                (?currComplexity > ?prevComplexity),
                (?currN = ?prevN),
                
            )&&
            !(
                (?currComplexity < ?prevComplexity),
                (?currN = ?prevN),
            )&&
            !(
                ABS(?currComplexity - ?prevComplexity) <= 0.5,
                (?currN > ?prevN),
            )&&
            !(
                ABS(?currComplexity - ?prevComplexity) <= 0.5,
                (?currN < ?prevN),
            )
        )
    ).
    """

[?timestamp2, :hasLowPlausibilty, ?lowPlausabilityIndicator] :-
    [?timestamp2, :hasMediumPlausibilty, 0],
    [?timestamp1, :next, ?timestamp2],
    [?timestamp1, :assumedAircraft, ?prevNumOfAssumedAircraft],#prev
    [?timestamp2, :assumedAircraft, ?currNumOfAssumedAircraft],#curr
    [?timestamp1, :conflictModule, ?prevConflictModule],
    [?timestamp2, :conflictModule, ?currConflictModule],
    [?prevConflictModule, :conflicts, ?prevNumOfConflicts],
    [?currConflictModule, :conflicts, ?currNumOfConflicts],
    [?timestamp1, :complexityModule, ?prevComplexityModule],
    [?timestamp2, :complexityModule, ?currComplexityModule],
    [?prevComplexityModule, :complexity, ?prevComplexity],#TODO: dodati u graf module
    [?currComplexityModule, :complexity, ?currComplexity],
    BIND(?prevNumOfConflicts + ?prevNumOfAssumedAircraft AS ?prevN),
    BIND(?currNumOfConflicts + ?currNumOfAssumedAircraft AS ?currN),
    BIND(
        IF(
            (?currComplexity > ?prevComplexity) && (?currN < ?prevN) || 
            (?currComplexity < ?prevComplexity) && (?currN > ?prevN),
            1,
            0
        )
        AS ?lowPlausabilityIndicator
    ).
    
    """referenca je 5.4.2 za ovaj nacin pisanja filtera"""
    """FILTER(

        !(
            !(
                (?currComplexity > ?prevComplexity),
                (?currN < ?prevN),
            )&&
            !(
                (?currComplexity < ?prevComplexity),
                (?currN > ?prevN),
            )
           
        )
    )."""


